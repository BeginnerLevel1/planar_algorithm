package com.huifer.planar.aset.algo.impl.concave;

import com.huifer.planar.aset.utils.CommonUtils;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.Test;
import org.locationtech.jts.geom.LineString;
import org.locationtech.jts.geom.Point;
import org.locationtech.jts.geom.Polygon;
import org.locationtech.jts.io.WKTReader;

public class CutPolygonTest {

    /**
     * 这是通过的测试案例 不能改
     */
    @Test
    public void cutPolygonWithLineStringTest() throws Exception {
        String pgWkt = "POLYGON ((88057.0949382782 73718.7540149689,88057.1911640167 73718.8625087738,88057.1911640167 73718.768743515,88057.2341899872 73718.8586025238,88057.2341899872 73718.764837265,88057.3026218414 73718.8488330841,88057.3801059723 73718.7857074738,88057.3436870575 73718.8781375885,88057.4395008087 73718.8097667694,88057.4142856598 73718.8996257782,88057.3221759796 73718.8996257782,88057.4730167389 73718.9779834747,88057.3797969818 73719.0276966095,88057.3280467987 73718.9484615326,88057.3280467987 73719.0363636017,88057.2029056549 73718.9992465973,88057.2830753326 73718.9113445282,88057.1618366241 73718.9836215973,88057.2400493622 73718.9015750885,88057.0934047699 73718.9445514679,88057.1729488373 73718.8777980804,88057.0025119781 73718.8623485565,88057.1355304718 73718.8424167633,88057.0949382782 73718.7540149689))";

        List<String> lines = Arrays.asList(
                "LINESTRING (88057.2341899872 73718.8586025238, 88057.26469184672 73718.92230393626)",
                "LINESTRING (88057.1355304718 73718.8424167633, 88057.16890758858 73718.83741481655)",
                "LINESTRING (88057.1729488373 73718.8777980804, 88057.19116587854 73718.86251087303)",
                "LINESTRING (88057.2400493622 73718.9015750885, 88057.24984573033 73718.89129865992)",
                "LINESTRING (88057.1911640167 73718.8625087738, 88057.22874988063 73718.90488656968)",
                "LINESTRING (88057.3436870575 73718.8781375885, 88057.33808355205 73718.89235887585)",
                "LINESTRING (88057.3280467987 73718.9484615326, 88057.29615095512 73718.89962602612)",
                "LINESTRING (88057.2830753326 73718.9113445282, 88057.29376307294 73718.89962604886)",
                "LINESTRING (88057.3221759796 73718.8996257782, 88057.25383327849 73718.89962642925)",
                "LINESTRING (88057.3026218414 73718.8488330841, 88057.34400410578 73718.8996257782)"
        );
        List<String> ps = Arrays.asList(
                "POINT (88057.1911640167 73718.8625087738)",
                "POINT (88057.2341899872 73718.8586025238)",
                "POINT (88057.3026218414 73718.8488330841)",
                "POINT (88057.3436870575 73718.8781375885)",
                "POINT (88057.3221759796 73718.8996257782)",
                "POINT (88057.3280467987 73718.9484615326)",
                "POINT (88057.2830753326 73718.9113445282)",
                "POINT (88057.2400493622 73718.9015750885)",
                "POINT (88057.1729488373 73718.8777980804)",
                "POINT (88057.1355304718 73718.8424167633)"
        );

        Polygon polygon = (Polygon) new WKTReader().read(pgWkt);
        // 内部线段
        List<LineString> clipLine = CommonUtils.wkt2Line(lines);
        // 所有凹点
        List<Point> aoPoints = CommonUtils.wkt2Point(ps);
        ArrayList<Polygon> polygons = CutPolygon
                .cutPolygonWithLineString(polygon, clipLine, aoPoints);
        polygons.forEach(s -> System.out.println(s));
    }


}
